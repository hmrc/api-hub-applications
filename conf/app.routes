# microservice specific routes

POST       /applications                                                            uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.registerApplication()

GET        /applications/:id/environments/:environmentName/credentials              uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.getCredentials(id: String, environmentName: String)
POST       /applications/:id/environments/:environmentName/credentials              uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.addCredential(id: String, environmentName: String)
DELETE     /applications/:id/environments/:environmentName/credentials/:clientId    uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.deleteCredential(id: String, environmentName: String, clientId: String)

GET        /applications                                                            uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.getApplications(teamMember: Option[String] ?= None, includeDeleted: Boolean ?= false)
GET        /applications/:id                                                        uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.getApplication(id: String, includeDeleted: Boolean ?= false)
POST       /applications/:id/delete                                                 uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.deleteApplication(id: String)
PUT        /applications/:id/apis                                                   uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.addApi(id)
DELETE     /applications/:applicationId/apis/:apiId                                 uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.removeApi(applicationId: String, apiId: String)
PUT        /applications/:applicationId/teams/:teamId                               uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.changeOwningTeam(applicationId: String, teamId: String)
DELETE     /applications/:applicationId/teams                                       uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.removeTeam(applicationId: String)
POST       /applications/:id/team-members                                           uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.addTeamMember(id: String)
GET        /applications/using-api/:id                                              uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.getApplicationsUsingApi(id: String, includeDeleted: Boolean ?= false)
GET        /applications/:id/all-scopes                                             uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.fetchAllScopes(id: String)
PUT        /applications/:id/fix-scopes                                             uk.gov.hmrc.apihubapplications.controllers.ApplicationsController.fixScopes(id: String)

POST       /access-requests                                                         uk.gov.hmrc.apihubapplications.controllers.AccessRequestsController.createAccessRequest()
PUT        /access-requests/:id/approve                                             uk.gov.hmrc.apihubapplications.controllers.AccessRequestsController.approveAccessRequest(id: String)
PUT        /access-requests/:id/reject                                              uk.gov.hmrc.apihubapplications.controllers.AccessRequestsController.rejectAccessRequest(id: String)
PUT        /access-requests/:id/cancel                                              uk.gov.hmrc.apihubapplications.controllers.AccessRequestsController.cancelAccessRequest(id: String)
GET        /access-requests                                                         uk.gov.hmrc.apihubapplications.controllers.AccessRequestsController.getAccessRequests(applicationId: Option[String] ?= None, status: Option[AccessRequestStatus] ?= None)
GET        /access-requests/:id                                                     uk.gov.hmrc.apihubapplications.controllers.AccessRequestsController.getAccessRequest(id: String)

GET        /test-connectivity                                                       uk.gov.hmrc.apihubapplications.controllers.TestConnectivityController.connectToHip

POST       /deployments                                                             uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.generate()
GET        /deployments/:publisherRef                                               uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.getDeploymentDetails(publisherRef: String)
PUT        /deployments/:publisherRef                                               uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.update(publisherRef: String)
PUT        /deployments/:publisherRef/promote                                       uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.promoteAPI(publisherRef: String)

POST       /teams                                                                   uk.gov.hmrc.apihubapplications.controllers.TeamsController.create()
GET        /teams                                                                   uk.gov.hmrc.apihubapplications.controllers.TeamsController.findAll(teamMember: Option[String] ?= None)
GET        /teams/:id                                                               uk.gov.hmrc.apihubapplications.controllers.TeamsController.findById(id: String)
GET        /teams/:id/applications                                                  uk.gov.hmrc.apihubapplications.controllers.TeamsController.findTeamApplications(id: String, includeDeleted: Boolean ?= false)
GET        /teams/name/:name                                                        uk.gov.hmrc.apihubapplications.controllers.TeamsController.findByName(name: String)
POST       /teams/:id/members                                                       uk.gov.hmrc.apihubapplications.controllers.TeamsController.addTeamMember(id: String)
DELETE     /teams/:id/members/:encryptedEmail                                       uk.gov.hmrc.apihubapplications.controllers.TeamsController.removeTeamMember(id: String, encryptedEmail: String)
PUT        /teams/:id                                                               uk.gov.hmrc.apihubapplications.controllers.TeamsController.renameTeam(id: String)

GET        /apis/:publisherRef/deployment-status                                    uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.getDeploymentStatus(publisherRef: String)
GET        /apis/:publisherRef/environment/:environment/deployment-status           uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.getDeploymentStatusForEnvironment(environment: String, publisherRef: String)
PUT        /apis/:apiId/teams/:teamId                                               uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.updateApiTeam(apiId: String, teamId: String)
DELETE     /apis/:apiId/teams                                                       uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.removeTeam(apiId: String)
PUT        /apis/:publisherRef/force-publish                                        uk.gov.hmrc.apihubapplications.controllers.DeploymentsController.forcePublish(publisherRef: String)

GET        /users                                                                   uk.gov.hmrc.apihubapplications.controllers.UsersController.findAll()

GET        /stats/apis-in-production                                                uk.gov.hmrc.apihubapplications.controllers.StatsController.apisInProduction()
GET        /stats/list-apis-in-production                                           uk.gov.hmrc.apihubapplications.controllers.StatsController.listApisInProduction()

POST       /oas/validate                                                            uk.gov.hmrc.apihubapplications.controllers.OASController.validateOAS()

GET        /egresses/gateways/:environmentName                                      uk.gov.hmrc.apihubapplications.controllers.EgressController.listEgressGateways(environmentName: String)

GET        /config/environments                                                     uk.gov.hmrc.apihubapplications.controllers.ConfigController.listEnvironments()
